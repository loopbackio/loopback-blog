<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://loopbackio.github.io/loopback-blog/</id>
    <title>LoopBack Blog</title>
    <updated>2020-12-08T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://loopbackio.github.io/loopback-blog/"/>
    <subtitle>LoopBack Blog</subtitle>
    <icon>https://loopbackio.github.io/loopback-blog/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 November 2020 Milestone Update]]></title>
        <id>november-2020-milestone</id>
        <link href="https://loopbackio.github.io/loopback-blog/november-2020-milestone"/>
        <updated>2020-12-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>Hope you had a wonderful Thanksgiving for those who celebrate it! In November, LoopBack team focused on improving the context module and documentation, as well as bug fixes. The Toronto squad participated in the <a href="https://www-01.ibm.com/ibm/cas/cascon/" target="_blank" rel="noopener noreferrer">CASCONxEVOKE</a> conference. Instead of a physical booth, we held a virtual one online. We welcomed <a href="https://github.com/nflaig" target="_blank" rel="noopener noreferrer">@nflaig</a> as the new maintainer of <a href="https://github.com/strongloop/loopback-next" target="_blank" rel="noopener noreferrer"><code>loopback-next</code></a>.</p><p>Read more to know about the highlighted improvements:</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="context">Context<a class="hash-link" href="#context" title="Direct link to heading">​</a></h2><ul><li><p>A new phase <code>init()</code> was added to the application life cycle events. It is used when a component need to contribute bindings asynchronously. For example:</p><div class="codeBlockContainer_I0IT language-ts theme-code-block"><div class="codeBlockContent_wNvx ts"><pre tabindex="0" class="prism-code language-ts codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name maybe-class-name">MyComponent</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">implements</span><span class="token plain"> </span><span class="token class-name maybe-class-name">Component</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token maybe-class-name">LifeCycleObserver</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">init</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Contribute bindings via `init`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// This cannot be done via constructor since it's synchronous.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> val </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">readFromConfig</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">app</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">bind</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'abc'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">to</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">val</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">status</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'initialized'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">initialized</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>You can check the <a href="https://loopback.io/doc/en/lb4/Component.html#component-life-cycle" target="_blank" rel="noopener noreferrer">Component</a> page to learn about its usage.</p></li><li><p><code>toInjectable()</code> was introduced as a shortcut to decorate a common/provider/dynamic-value-factory class and automatically creating binding for them. For example:</p><div class="codeBlockContainer_I0IT language-ts theme-code-block"><div class="codeBlockContent_wNvx ts"><pre tabindex="0" class="prism-code language-ts codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">injectable</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">scope</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token maybe-class-name">BindingScope</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">SINGLETON</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name maybe-class-name">MyController</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">inject</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'my-options'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> options</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token maybe-class-name">MyOptions</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">binding</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toInjectable</span><span class="token punctuation" style="color:#393A34">(</span><span class="token maybe-class-name">MyController</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>The decorator's usage is well documented on page <a href="https://loopback.io/doc/en/lb4/Binding.html#an-injectable-class" target="_blank" rel="noopener noreferrer">Binding</a>.</p></li><li><p>PR <a href="https://github.com/strongloop/loopback-next/pull/6701" target="_blank" rel="noopener noreferrer">#6701</a> updated test cases to reflect how the design types of array/undefined/complex properties are retrieved.</p></li><li><p>Method injection is allowed for the lifecycle methods in PR <a href="https://github.com/strongloop/loopback-next/pull/6740" target="_blank" rel="noopener noreferrer">#6740</a>. For example:</p><div class="codeBlockContainer_I0IT language-ts theme-code-block"><div class="codeBlockContent_wNvx ts"><pre tabindex="0" class="prism-code language-ts codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name maybe-class-name">MyObserverWithMethodInjection</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">implements</span><span class="token plain"> </span><span class="token class-name maybe-class-name">LifeCycleObserver</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  status </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'not-initialized'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">init</span><span class="token punctuation" style="color:#393A34">(</span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">inject</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'prefix'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> prefix</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">status</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">prefix</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">:initialized</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">start</span><span class="token punctuation" style="color:#393A34">(</span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">inject</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'prefix'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> prefix</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">status</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">prefix</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">:started</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">stop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">inject</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'prefix'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> prefix</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">status</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">prefix</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">:stopped</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></li><li><p>In some cases, your Express middleware wants to access LoopBack's RequestContext to resolve certain bindings. This can be done via <code>MIDDLEWARE_CONTEXT</code> property of the Express request object, which is set up by LoopBack when the <code>RequestContext</code> is instantiated. For example:</p><div class="codeBlockContainer_I0IT language-ts theme-code-block"><div class="codeBlockContent_wNvx ts"><pre tabindex="0" class="prism-code language-ts codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token constant" style="color:#36acaa">MIDDLEWARE_CONTEXT</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token maybe-class-name">RequestContext</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/rest'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">expressHandler</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">req</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> res</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> next</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> reqCtx </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">req </span><span class="token keyword module" style="color:#00009f">as</span><span class="token plain"> </span><span class="token builtin">any</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">[</span><span class="token constant" style="color:#36acaa">MIDDLEWARE_CONTEXT</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Now you have access to the LoopBack RequestContext</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="documentation">Documentation<a class="hash-link" href="#documentation" title="Direct link to heading">​</a></h2><ul><li><p>The guide for calling REST APIs and SOAP services were separated to make the steps involved clearer. You can check the overview page <a href="https://loopback.io/doc/en/lb4/Accessing-services.html" target="_blank" rel="noopener noreferrer">Accessing services</a> and its sub-topics <a href="https://loopback.io/doc/en/lb4/Calling-soap-web-services.html" target="_blank" rel="noopener noreferrer">Calling SOAP web services</a> and <a href="https://loopback.io/doc/en/lb4/Calling-rest-apis.html" target="_blank" rel="noopener noreferrer">Calling REST APIs</a> for details.</p></li><li><p>For troubleshooting, we added steps for creating breakpoints in vscode in the <a href="https://loopback.io/doc/en/lb4/Troubleshooting.html#creating-breakpoints" target="_blank" rel="noopener noreferrer">documentation</a>. You can find more details in PR <a href="https://github.com/strongloop/loopback-next/pull/6743" target="_blank" rel="noopener noreferrer">#6743</a>. </p></li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="rest">REST<a class="hash-link" href="#rest" title="Direct link to heading">​</a></h2><ul><li>Matching a URL or hostname against a regular expression that contains an unescaped dot as part of the hostname might match more hostnames than expected. PR <a href="https://github.com/strongloop/loopback-next/pull/6813" target="_blank" rel="noopener noreferrer">#6813</a> updated the regular expression of hostnames accordingly.</li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="repository">Repository<a class="hash-link" href="#repository" title="Direct link to heading">​</a></h2><ul><li><a href="https://github.com/strongloop/loopback-next/pull/6755" target="_blank" rel="noopener noreferrer">#6755</a> threw 400 <code>BadRequestError</code> for invalid inclusion relation name by rejecting the request with statusCode as 400.</li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="examples">Examples<a class="hash-link" href="#examples" title="Direct link to heading">​</a></h2><ul><li>PR <a href="https://github.com/strongloop/loopback-next/pull/6598" target="_blank" rel="noopener noreferrer">#6598</a> updated artifacts of the <a href="https://github.com/strongloop/loopback-next/tree/master/examples/todo-list" target="_blank" rel="noopener noreferrer">todo-list</a> example to the latest style generated by the LoopBack CLI.</li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="enriching-loopback-and-its-community---you-are-invited">Enriching LoopBack and its Community - You are Invited!<a class="hash-link" href="#enriching-loopback-and-its-community---you-are-invited" title="Direct link to heading">​</a></h2><p>As mentioned in our <a href="https://strongloop.com/strongblog/2020-community-contribution/" target="_blank" rel="noopener noreferrer">recent blog post</a>, your contribution is important to make LoopBack a sustainable open source project. </p><p>Here is what you can do:</p><ul><li><a href="https://join.slack.com/t/loopbackio/shared_invite/zt-8lbow73r-SKAKz61Vdao~_rGf91pcsw" target="_blank" rel="noopener noreferrer">Join LoopBack Slack community</a></li><li><a href="https://github.com/strongloop/loopback-next/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22" target="_blank" rel="noopener noreferrer">Look for first-contribution-friendly issues</a></li><li>Give us feedback and join our discussion in <a href="https://github.com/strongloop/loopback-next" target="_blank" rel="noopener noreferrer">our GitHub repo</a></li></ul><p>Let's make LoopBack a better framework together!</p>]]></content>
        <author>
            <name>Janny Hou</name>
            <uri>https://github.com/jannyhou</uri>
        </author>
        <category label="Milestone update" term="Milestone update"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 October 2020 Milestone Update]]></title>
        <id>october-2020-milestone</id>
        <link href="https://loopbackio.github.io/loopback-blog/october-2020-milestone"/>
        <updated>2020-11-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>In October, we were excited to see an increasing number of community contributions as people joined the <a href="https://strongloop.com/strongblog/2020-hacktoberfest/" target="_blank" rel="noopener noreferrer">Hacktoberfest</a> event. This month we had pretty balanced improvements in each area of the framework, including context, health check, OpenAPI specification and documentations. Keep reading to learn about the recently added features!</p><p>We welcomed <a href="https://github.com/mrmodise" target="_blank" rel="noopener noreferrer">@mrmodise</a> as the maintainer of <a href="https://github.com/strongloop/loopback4-example-shopping" target="_blank" rel="noopener noreferrer"><code>loopback4-shopping-example</code></a>. And we'd like to thank everyone <a href="https://github.com/nflaig" target="_blank" rel="noopener noreferrer">@nflaig</a>, <a href="https://github.com/MattiaPrimavera" target="_blank" rel="noopener noreferrer">@MattiaPrimavera</a>, <a href="https://github.com/mdbetancourt" target="_blank" rel="noopener noreferrer">@mdbetancourt</a>, <a href="https://github.com/mrmodise" target="_blank" rel="noopener noreferrer">@mrmodise</a>, <a href="https://github.com/frbuceta" target="_blank" rel="noopener noreferrer">@frbuceta</a>, <a href="https://github.com/HrithikMittal" target="_blank" rel="noopener noreferrer">@HrithikMittal</a>, <a href="https://github.com/simlt" target="_blank" rel="noopener noreferrer">@simlt</a>, <a href="https://github.com/hectorleiva" target="_blank" rel="noopener noreferrer">@hectorleiva</a>, <a href="https://github.com/pktippa" target="_blank" rel="noopener noreferrer">@pktippa</a>, <a href="https://github.com/VergilSkye" target="_blank" rel="noopener noreferrer">@VergilSkye</a>, <a href="https://github.com/kerolloz" target="_blank" rel="noopener noreferrer">@kerolloz</a>, <a href="https://github.com/arondn2" target="_blank" rel="noopener noreferrer">@arondn2</a>, <a href="https://github.com/mayank-SFIN571" target="_blank" rel="noopener noreferrer">@mayank-SFIN571</a> for your contributions in October!</p><p>Here are the highlighted improvements:</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="context">Context<a class="hash-link" href="#context" title="Direct link to heading">​</a></h2><ul><li>A set of fine-grained scopes <code>APPLICATION</code>, <code>SERVER</code> and <code>REQUEST</code> has been introduced to allow better
scoping of binding resolutions. The limitation of the previous scopes is explained in section <a href="https://loopback.io/doc/en/lb4/Binding.html#choose-the-right-scope" target="_blank" rel="noopener noreferrer">choose the right scope</a>, and section <a href="https://loopback.io/doc/en/lb4/Binding.html#resolve-a-binding-value-by-key-and-scope-within-a-context-hierarchy" target="_blank" rel="noopener noreferrer">resolve a binding value by key and scope within a context hierarchy</a> explains how different scopes determine the binding resolutions.</li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="rest">REST<a class="hash-link" href="#rest" title="Direct link to heading">​</a></h2><ul><li><p>Allowed array query parameter for a single value, like <code>{tags: 'hello'}</code> where parameter <code>tags</code> is a string array. See PR <a href="https://github.com/strongloop/loopback-next/pull/6542" target="_blank" rel="noopener noreferrer">#6542</a>.</p></li><li><p>Supported property level configuration for hidden fields, like <code>@property({type: 'string', hidden: true}) password: string</code>. This is the shortcut for specifying the hidden properties in model settings. See PR <a href="https://github.com/strongloop/loopback-next/pull/6484" target="_blank" rel="noopener noreferrer">#6484</a>.</p></li><li><p><code>save()</code> method throwing error due to missing <code>idName</code> is fixed in PR <a href="https://github.com/strongloop/loopback-next/pull/6640" target="_blank" rel="noopener noreferrer">#6640</a>.</p></li><li><p><code>modifySpec()</code> turns to an async function to allow async spec updates. See PR <a href="https://github.com/strongloop/loopback-next/pull/6655" target="_blank" rel="noopener noreferrer">#6655</a>.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="build">Build<a class="hash-link" href="#build" title="Direct link to heading">​</a></h2><ul><li><p>A force clean rebuild was added to the pre-start script for the LoopBack 4 examples. You can run <code>npm start</code> after removing artifacts without manually cleaning the <code>/dist</code> files. See PR <a href="https://github.com/strongloop/loopback-next/pull/6588" target="_blank" rel="noopener noreferrer">#6588</a>.</p></li><li><p>Turned on <code>exit</code> for mocha tests for the created LoopBack applications. See PR <a href="https://github.com/strongloop/loopback-next/pull/6475" target="_blank" rel="noopener noreferrer">#6475</a>.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="extensions">Extensions<a class="hash-link" href="#extensions" title="Direct link to heading">​</a></h2><ul><li><p>Module <a href="https://github.com/strongloop/loopback-next/tree/master/extensions/socketio" target="_blank" rel="noopener noreferrer">@loopback/socketio</a> was added to use socket.io to expose controllers as WebSocket friendly endpoints.</p></li><li><p>Enable/disable the metrics endpoints in explorer when mounting the metric and health extensions. See PR <a href="https://github.com/strongloop/loopback-next/pull/6646" target="_blank" rel="noopener noreferrer">#6646</a> and PR <a href="https://github.com/strongloop/loopback-next/pull/6645" target="_blank" rel="noopener noreferrer">#6645</a>.</p></li><li><p>Only add <code>MetricsObserver</code>, <code>MetricsPushObserver</code> and expose <code>/metrics</code> endpoints when they are enabled. See PR <a href="https://github.com/strongloop/loopback-next/pull/6644" target="_blank" rel="noopener noreferrer">#6644</a>.</p></li><li><p>The health check for applications running in container now returns a more accurate HTTP status code based on the state. For example, checking <code>/health</code> for application in states 'STARTING', 'STOPPING' or 'STOPPED' returns 503. You can find more details in PR <a href="https://github.com/strongloop/loopback-next/pull/6648" target="_blank" rel="noopener noreferrer">#6648</a>.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="documentation-restructure">Documentation Restructure<a class="hash-link" href="#documentation-restructure" title="Direct link to heading">​</a></h2><ul><li><p>LoopBack 4 targets both API developers and extension developers, while the current website doesn't distinguish them clearly. This month we restructured the sidebar to classify the documentation into two parts: "Building LoopBack Applications" and "Extending LoopBack Framework". You can check <a href="https://loopback.io/doc/en/lb4/Customizing-server-configuration.html" target="_blank" rel="noopener noreferrer">https://loopback.io/doc/en/lb4/Customizing-server-configuration.html</a> to view the new layout.</p></li><li><p>The instructions for implementing HTTP redirects and mounting an Express router are extracted into a standalone page under "How-to guides". You can check <a href="https://loopback.io/doc/en/lb4/Customizing-routes.html" target="_blank" rel="noopener noreferrer">https://loopback.io/doc/en/lb4/Customizing-routes.html</a> to view the content.</p></li><li><p>Moved server recipes to how-to guides <a href="https://loopback.io/doc/en/lb4/Customizing-server-configuration.html" target="_blank" rel="noopener noreferrer">Customizing-server-configuration</a>. See PR <a href="https://github.com/strongloop/loopback-next/pull/6663" target="_blank" rel="noopener noreferrer">#6663</a>.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="examples">Examples<a class="hash-link" href="#examples" title="Direct link to heading">​</a></h2><p>Two examples were added last month:</p><ul><li><p>Example <a href="https://github.com/strongloop/loopback-next/tree/master/examples/webpack" target="_blank" rel="noopener noreferrer">webpack</a> was added to demo LoopBack running inside the browser as client-side JavaScript application.</p></li><li><p>Example <a href="https://github.com/strongloop/loopback-next/tree/master/examples/socketio" target="_blank" rel="noopener noreferrer">socketio</a> gives a basic implementation of socketio with LoopBack 4.</p></li></ul><p>You can also download the examples by using the <code>lb4 example</code> command.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="enriching-loopback-and-its-community---you-are-invited">Enriching LoopBack and its Community - You are Invited!<a class="hash-link" href="#enriching-loopback-and-its-community---you-are-invited" title="Direct link to heading">​</a></h2><p>As mentioned in our <a href="https://strongloop.com/strongblog/2020-community-contribution/" target="_blank" rel="noopener noreferrer">recent blog post</a>, your contribution is important to make LoopBack a sustainable open source project. </p><p>Here is what you can do:</p><ul><li><a href="https://join.slack.com/t/loopbackio/shared_invite/zt-8lbow73r-SKAKz61Vdao~_rGf91pcsw" target="_blank" rel="noopener noreferrer">Join LoopBack Slack community</a></li><li><a href="https://github.com/strongloop/loopback-next/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22" target="_blank" rel="noopener noreferrer">Look for first-contribution-friendly issues</a></li><li>Give us feedback and join our discussion in <a href="https://github.com/strongloop/loopback-next" target="_blank" rel="noopener noreferrer">our GitHub repo</a></li></ul><p>Let's make LoopBack a better framework together!</p>]]></content>
        <author>
            <name>Janny Hou</name>
            <uri>https://github.com/jannyhou</uri>
        </author>
        <category label="Milestone update" term="Milestone update"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Community Q&A Monthly Digest - Oct 2020]]></title>
        <id>2020-oct-slack-qa</id>
        <link href="https://loopbackio.github.io/loopback-blog/2020-oct-slack-qa"/>
        <updated>2020-10-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>It's been 6 months since we created the <a href="https://join.slack.com/t/loopbackio/shared_invite/zt-8lbow73r-SKAKz61Vdao~_rGf91pcsw" target="_blank" rel="noopener noreferrer">Slack channel</a> for LoopBack community. Thanks to your support, over 500 members had joined and new members are joining almost everyday! Let's take a look at the October edition of the “Community Q&amp;A Monthly Digest”, capturing some of the Q&amp;A in this forum. </p><hr><p><strong>Question:</strong> How to get the raw request in LoopBack 4 in a function without changing the parsing for the entire app?</p><p><strong>Answer:</strong>
It's possible to get the raw request body with <code>x-parser</code>: <a href="https://loopback.io/doc/en/lb4/Parsing-requests.html#extend-request-body-parsing" target="_blank" rel="noopener noreferrer">https://loopback.io/doc/en/lb4/Parsing-requests.html#extend-request-body-parsing</a>.
-- <em>Answered by @Rifa Achrinza</em></p><hr><p><strong>Question:</strong> Is there any solution for tracking database migration, for example, migrations has been already run and possible rollback of migration? </p><p><strong>Answer:</strong>
I created a module which tracks migrations and executes scripts based on the db version compared to the app version, see <a href="https://www.npmjs.com/package/loopback4-migration" target="_blank" rel="noopener noreferrer">https://www.npmjs.com/package/loopback4-migration</a>.
--<em>Answered by @nflaig</em></p><p>Ideally, LoopBack generates the DDL for users to review, and then it’s up to the users to run it or not. It's a feature to be implemented, see <a href="https://github.com/strongloop/loopback-next/issues/4757" target="_blank" rel="noopener noreferrer">https://github.com/strongloop/loopback-next/issues/4757</a>.
--<em>Answered by @Diana Lau</em></p><hr><p><strong>Question:</strong> I want to check whether a specified <code>categoryId</code> exists in a Mongo datasource, how can I do that? For example,</p><div class="codeBlockContainer_I0IT language-json theme-code-block"><div class="codeBlockContent_wNvx json"><pre tabindex="0" class="prism-code language-json codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token property" style="color:#36acaa">"categories"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"categoryId"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"e759c15e-3552-4557-aa6b-c1396674c7e6"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"name"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"test"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"categoryId"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"e759c15e-3552-4557-aa6b-c1396674c7e5"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"name"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"test1"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>I tried <code>await this.usersRepository.find({'categories.categoryId': 'e759c15e-3552-4557-aa6b-c1396674c7e5'});</code> but getting an error message below:</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; { 'categories.categoryId': string; }' is not assignable to parameter of type 'Filter&lt;Users&gt;'. Object literal may only specify known properties, and ''categories.categoryId'' does not exist in type 'Filter&lt;Users&gt;'</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p><strong>Answer:</strong>
The object you pass into <code>.find()</code> needs to be a <code>Filter</code> object. Make sure you <code>import { Filter } from '@loopback/repository';</code>, then you can: </p><div class="codeBlockContainer_I0IT language-ts theme-code-block"><div class="codeBlockContent_wNvx ts"><pre tabindex="0" class="prism-code language-ts codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> existingCategoryFilter</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token maybe-class-name">Filter</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">//...filter properties in here...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> existingCategories </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">categoryRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">find</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">existingCategoryFilter</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>-- Answered by @Jackson Hyde</p><p>To add on what @Jackson Hyde has mentioned, due to limitations on TypeScript types, nested objects are not included in the typings. Hence, you'll also need to override TypeScript's check by adding <code>// @ts-ignore</code> just before the repository function.
-- Answered by @Rifa Achrinza</p><hr><p><strong>Question:</strong> I want to implement JWT refresh token in LoopBack 4. Can you suggest any good tutorial?</p><p><strong>Answer:</strong> You can follow this <a href="https://loopback.io/doc/en/lb4/JWT-authentication-extension.html" target="_blank" rel="noopener noreferrer">https://loopback.io/doc/en/lb4/JWT-authentication-extension.html</a>.
--<em>Answered by @Pratik Jaiswal</em></p><hr><p><strong>Question:</strong> I used LoopBack CLI to create a "SHIPPING" model but it tries to do lowercase "Shipping" in the SQL with the quotes. An error occurred in the SQL statement because it is case sensitive with the quotes around it. How can I fix this? I'm on LoopBack 4 and using the <code>loopback-connector-ibmi</code>.</p><p><strong>Answer:</strong>
Did u try to give the name in your model?</p><div class="codeBlockContainer_I0IT language-ts theme-code-block"><div class="codeBlockContent_wNvx ts"><pre tabindex="0" class="prism-code language-ts codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">model</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'member_membership'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name maybe-class-name">MemberMembership</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name maybe-class-name">Entity</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>So <code>member_membership</code> is the table in the database.
-- Answered by @Mohammed</p><p>The <code>name</code> property customizes the model name, which is default to the class name if not provided. The model name is then used as the default for table name unless you further customize it for specific databases.
-- Answered by @Raymond Feng</p><hr><p><strong>Question:</strong> I have a CORS issue with <code>passport-login</code> example when trying to establish connection with Google using Angular Frontend. I keep getting CORS error:</p><blockquote><p>Access to XMLHttpRequest at '<a href="https://accounts.google.com/o/oauth2/v2/auth?...'" target="_blank" rel="noopener noreferrer">https://accounts.google.com/o/oauth2/v2/auth?...'</a> (redirected from 'http://localhost:3000/api/auth/thirdparty/google') from origin 'http://localhost:4200' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource."</p></blockquote><p>But the application is working fine with jade.</p><p><strong>Answer:</strong>
In your login component you could do something like:</p><div class="codeBlockContainer_I0IT language-ts theme-code-block"><div class="codeBlockContent_wNvx ts"><pre tabindex="0" class="prism-code language-ts codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token constant" style="color:#36acaa">OAUTH2_LINK_GOOGLE</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">api_url</span><span class="token operator" style="color:#393A34">+</span><span class="token string" style="color:#e3116c">'/api/auth/thirdparty/google?redirect_uri='</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">redir_url</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">onGoogleSignIn</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token dom variable" style="color:#36acaa">window</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">location</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">href</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">OAUTH2_LINK_GOOGLE</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>Bind the Google link to the above in the HTML code.</p><p>-- Answered by @marg330</p><hr><h2 class="anchor anchorWithStickyNavbar_mojV" id="enriching-loopback-and-its-community---you-are-invited">Enriching LoopBack and its Community - You are Invited!<a class="hash-link" href="#enriching-loopback-and-its-community---you-are-invited" title="Direct link to heading">​</a></h2><p>As mentioned in our <a href="https://strongloop.com/strongblog/2020-community-contribution/" target="_blank" rel="noopener noreferrer">recent blog post</a>, your contribution is important to make LoopBack a sustainable open source project. </p><p>Here is what you can do:</p><ul><li><a href="https://join.slack.com/t/loopbackio/shared_invite/zt-8lbow73r-SKAKz61Vdao~_rGf91pcsw" target="_blank" rel="noopener noreferrer">Join LoopBack Slack community</a></li><li><a href="https://github.com/strongloop/loopback-next/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22" target="_blank" rel="noopener noreferrer">Look for first-contribution-friendly issues</a></li><li>Give us feedback and join our discussion in <a href="https://github.com/strongloop/loopback-next" target="_blank" rel="noopener noreferrer">our GitHub repo</a></li></ul><p>Let's make LoopBack a better framework together!</p>]]></content>
        <author>
            <name>dhmlau</name>
        </author>
        <category label="Community" term="Community"/>
        <category label="Slack" term="Slack"/>
        <category label="Q&A" term="Q&A"/>
    </entry>
</feed>